/*
  Simple ESP32 Load Balancing Demo
  - Reads current sensors on 3 phases
  - Calculates power (P = V * I)
  - If difference > THRESHOLD, shifts load using relay
*/

const int CT_A = 36;   // Phase A sensor
const int CT_B = 39;   // Phase B sensor
const int CT_C = 34;   // Phase C sensor

const int RELAY_PIN = 16;  // Relay to shift load
const float V_NOMINAL = 230.0;  // Volts

const float THRESHOLD = 500.0;  // Watts imbalance allowed

float getCurrent(int pin) {
  // prototype: just read ADC and scale
  int val = analogRead(pin);
  float current = (val / 4095.0) * 10.0;  // scale to 0–10A (fake calibration)
  return current;
}

void setup() {
  Serial.begin(115200);
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW);  // default OFF
}

void loop() {
  // Measure
  float Ia = getCurrent(CT_A);
  float Ib = getCurrent(CT_B);
  float Ic = getCurrent(CT_C);

  float Pa = Ia * V_NOMINAL;
  float Pb = Ib * V_NOMINAL;
  float Pc = Ic * V_NOMINAL;

  Serial.printf("P: A=%.1f W, B=%.1f W, C=%.1f W\n", Pa, Pb, Pc);

  // Find imbalance
  float maxP = max(Pa, max(Pb, Pc));
  float minP = min(Pa, min(Pb, Pc));
  float diff = maxP - minP;

  if (diff > THRESHOLD) {
    Serial.println("⚡ Imbalance detected! Switching relay...");
    digitalWrite(RELAY_PIN, HIGH);  // move load
  } else {
    digitalWrite(RELAY_PIN, LOW);   // normal
  }

  delay(2000); // every 2s
}
